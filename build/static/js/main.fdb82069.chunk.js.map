{"version":3,"sources":["store/actions/calendar.js","components/card/card.js","components/modal/modal.js","components/calendar/Calendar.js","utils/index.js","containers/App/index.js","serviceWorker.js","store/reducers/calendar.js","store/reducers/index.js","store/index.js","index.js"],"names":["addEvent","event_id","event","type","payload","deleteEvent","my_dragging_id","my_dropping_id","card","props","updateBoxValues","events","alert","e","target","id","this","preventDefault","time","card_class","card_values","onDrop","whenDropped","onDragOver","dragOver","className","onDragEnd","dragEnd","draggable","data-toggle","data-target","onClick","cardClicked","name","React","Component","connect","state","CalendarReducer","error","dispatch","InfoModal","card_id","JSON","parse","card_showing","tabindex","role","aria-labelledby","aria-hidden","style","borderRadius","borderBottom","data-dismiss","aria-label","class","fontSize","fontWeight","placeholder","value","event_text","onChange","handleTextChange","day","month","date","color","background","addingEvent","document","getElementById","deletingEvent","stringify","Calendar","setState","event_name","curr_week","map","cw","i","visibility","key","current_week","currentDate","moment","weekStart","clone","startOf","days","endOf","weekinfo","add","push","format","getCurrentWeek","Fragment","showCurrentWeek","customHistory","createBrowserHistory","App","history","path","component","Boolean","window","location","hostname","match","initialState","calendarReducer","action","console","log","add_events","del_events","upd_events","combineReducers","consoleMessages","store","next","result","groupCollapsed","getState","groupEnd","applyMiddleware","thunk","createStore","appReducer","storeFactory","localStorage","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","message","ReactDOM","render"],"mappings":"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","file":"static/js/main.fdb82069.chunk.js","sourcesContent":["export const ADD_EVENT = \"ADD_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\nexport const UPDATE_EVENT = \"UPDATE_EVENT\";\n\nexport const addEvent = (event_id,event) => ({\n  type: ADD_EVENT,\n  payload: { event_id,event }\n});\n\nexport const deleteEvent = (event_id) => ({\n  type: DELETE_EVENT,\n  payload: event_id\n});\n\nexport const updateEvent = (event_id,event) => ({\n  type: UPDATE_EVENT,\n  payload: { event_id,event }\n});\n","import React from 'react';\nimport './style.scss';\nimport { connect } from \"react-redux\";\nimport { addEvent,deleteEvent } from '../../store/actions/calendar';\n\nlet my_dragging_id = null;\nlet my_dropping_id = null;\n\nclass card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  updateBoxValues = () => {\n    if(!my_dragging_id || !my_dropping_id) return;\n    const { events } = this.props;\n\n    if(events[my_dragging_id] && !events[my_dropping_id]) {\n      this.props.addEvent(my_dropping_id,{\n        ...events[my_dragging_id]\n      });\n\n      this.props.deleteEvent(my_dragging_id);\n\n      my_dragging_id = null;\n      my_dropping_id = null;\n    } else {\n      alert('Not possible!');\n    }\n  }\n\n  dragEnd(e) {\n    // console.log('drag End',e.target.id,my_dropping_id);\n    my_dragging_id = e.target.id;\n    this.updateBoxValues();\n  }\n\n  whenDropped(e) {\n    e.preventDefault();\n    my_dropping_id = e.target.id;\n    // console.log('dropped',my_dropping_id);\n  }\n\n  dragOver(e) {\n    e.preventDefault();\n  }\n\n  dragStart(e) {\n    // my_dragging_id = e.target.id;\n    // console.log('drag start',my_dragging_id);\n  }\n\n  render() {\n    const { events,id,time } = this.props;\n\n    const card_class = (events[id]) ? 'card_custom_select' : 'card_custom';\n    const card_values = (events[id]) ? events[id] : {};\n\n    return (\n      <div\n        onDrop={(e) => this.whenDropped(e)}\n        onDragOver={(e) => this.dragOver(e)}\n      >\n        <div className={`card ${card_class} ml-2 mr-2 mt-2`}\n          // onDragStart={(e) => this.dragStart(e)}\n          // onDrag={this.dragging}\n          onDragEnd={(e) => this.dragEnd(e)}\n          draggable=\"true\"\n          id={this.props.id}\n          data-toggle=\"modal\" data-target=\"#info_modal\"\n          onClick={() => this.props.cardClicked(id)}\n        >\n          <div className=\"card-body\" id={id}>\n            <h5 className=\"card-title\" id={id}>{time || '0:00'}</h5>\n            <h6 className=\"card-subtitle mb-2\" id={id}>{card_values.name || 'Blocked'}</h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>\n  ({\n    events: state.CalendarReducer.events,\n    error: state.CalendarReducer.error\n  })\n\nconst mapDispatchToProps = dispatch =>\n({\n  addEvent: (event_id,event) => dispatch(addEvent(event_id,event)),\n  deleteEvent: (event_id) => dispatch(deleteEvent(event_id))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(card);","import React,{ useState } from 'react';\n\nconst InfoModal = (props) => {\n  const card_id = JSON.parse(props.card_showing);\n\n  return (\n    <div className=\"modal fade\" id=\"info_modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"info_modalLabel\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\">\n        <div className=\"modal-content\" style={{ borderRadius: '20px' }}>\n          <div className=\"modal-header pb-0\" style={{ borderBottom: '0px' }}>\n            {/* <h5 className=\"modal-title\" id=\"info_modalLabel\"><b>Event</b></h5> */}\n            <button type=\"button\" className=\"close m-0\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body pt-0 ml-5 mr-5\">\n            <form>\n              <div class=\"form-group\">\n                <input style={{fontSize:'2em',fontWeight:'bold'}} type=\"text\" class=\"form-control\" id=\"event_name\" placeholder=\"Event name\" value={`${props.event_text}`} onChange={(e) => props.handleTextChange(e)} />\n              </div>\n\n              <div class=\"form-group\">\n                <b>\n                  { (card_id) ? `${card_id.day}, ${card_id.month} ${card_id.date} at ${card_id.time}` : null }\n                </b>\n              </div>\n            </form>\n\n            <div className=\"d-flex justify-content-around mt-5\">\n              <button type=\"button\" class=\"btn btn-warning btn-lg\" style={{color:'white',background:'#f5ca5f',borderRadius:'10px'}} data-dismiss=\"modal\" aria-label=\"Close\"\n                onClick={() => props.addingEvent(document.getElementById('event_name').value)}\n              >\n                <i className=\"fas fa-calendar mr-2\"></i>\n                Reschedule\n              </button>\n\n              <button type=\"button\" class=\"btn btn-danger btn-lg\" style={{color:'white',background:'#fa4141',borderRadius:'10px'}} data-dismiss=\"modal\" aria-label=\"Close\"\n                onClick={() => props.deletingEvent(JSON.stringify(card_id))}\n              >\n                <i className=\"fas fa-times mr-2\"></i>\n                Cancel\n              </button>\n            </div>\n\n          </div>\n          {/* <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoModal;","import React from 'react';\nimport { getCurrentWeek } from '../../../src/utils'\nimport Card from '../card/card';\nimport InfoModal from '../modal/modal';\nimport './style.scss';\nimport { connect } from \"react-redux\";\nimport { addEvent,deleteEvent } from '../../store/actions/calendar';\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.time = ['8:00 AM','9:00 AM','10:00 AM','11:00 AM','12:00 PM','1:00 PM','2:00 PM','3:00 PM','4:00 PM','5:00 PM','6:00 PM','7: 00 PM','8:00 PM'];\n    this.state = {\n      card_showing: null,\n      event_text: ''\n    }\n  }\n\n  handleTextChange = (e) => {\n    this.setState({event_text: e.target.value});\n  }\n\n  cardClicked = (card_id) => {\n    const event_name = this.props.events[card_id] ? this.props.events[card_id].name : '';    \n\n    this.setState({ card_showing: card_id });\n    this.setState({ event_text: event_name});\n  }\n\n  addingEvent = (event_name) => {\n    this.props.addEvent(this.state.card_showing,{\n      name: event_name,\n      ...JSON.parse(this.state.card_showing)\n    });\n  }\n\n  deletingEvent = (event_id) => {\n    this.props.deleteEvent(event_id);\n  }\n\n  showCurrentWeek(curr_week) {\n    return(\n      curr_week.map((cw,i) => (\n        <div className=\"d-flex align-items-center justify-content-center flex-column\">\n            <div className=\"d-flex align-items-center justify-content-center\">\n              {!i ? <div className=\"pr-4\" style={{visibility:'hidden'}}>{'8:00 AM'}</div> : null}\n\n              <div>\n                <div className=\"text-center week_day\" key={`week_${i}`}>\n                  {cw.day}\n                </div>\n                <div className=\"text-center date\" key={`date_${i}`}>\n                  {cw.date}\n                </div>\n              </div>\n            </div>\n\n            {this.time.map(time => (\n              <div className=\"d-flex align-items-center justify-content-center mt-4\">\n                {!i ? <div className=\"pr-4\"><b>{time}</b></div> : null}\n                <Card time={time} id={`${JSON.stringify({ ...cw,time })}`} cardClicked={this.cardClicked} />\n              </div>\n            ))}\n\n        </div>\n      ))\n    );\n  }\n\n  render() {\n    const current_week = getCurrentWeek();\n    const { events } = this.props;\n    \n    return(\n      <React.Fragment>\n        <div className=\"calendar\">\n          <div className=\"container-fluid\">\n            <div className=\"d-flex align-items-center justify-content-center\">\n              {this.showCurrentWeek(current_week)}\n            </div>\n          </div>\n        </div>\n        <InfoModal \n          card_showing={this.state.card_showing}\n          events={events}\n          addingEvent={this.addingEvent}\n          deletingEvent={this.deletingEvent}\n          handleTextChange={this.handleTextChange}\n          event_text={this.state.event_text}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state =>\n  ({\n    events: state.CalendarReducer.events,\n    error: state.CalendarReducer.error\n  })\n\nconst mapDispatchToProps = dispatch =>\n  ({\n    addEvent: (event_id,event) => dispatch(addEvent(event_id,event)),\n    deleteEvent: (event_id) => dispatch(deleteEvent(event_id))\n  })\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Calendar);","// Resuable utility function comes here\nimport moment from 'moment';\n\nexport const getCurrentWeek = () => {\n  var currentDate = moment();\n\n  var weekStart = currentDate.clone().startOf('isoWeek');\n  var weekEnd = currentDate.clone().endOf('isoWeek');\n\n  var days = [];\n\n  for (var i = 0; i <= 6; i++) {\n    let weekinfo = moment(weekStart).add(i, 'days');\n    days.push({\n      month: weekinfo.format(\"MMMM\"),\n      date: weekinfo.format('DD'),\n      day: weekinfo.format('dddd')\n    });\n  }\n\n  return days;\n}","import React from 'react';\nimport { Router, Route } from 'react-router';\nimport Calendar from '../../components/calendar/Calendar';\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory();\n\nconst App = (props) => {\n  return (\n    <Router history={customHistory}>\n      <Route path=\"/\" component={Calendar} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_EVENT,DELETE_EVENT,UPDATE_EVENT } from '../actions/calendar';\n\nconst initialState = {\n  events: {},\n  error: ''\n};\n\nconst calendarReducer = (state = initialState,action) => {\n  switch(action.type) {\n    case ADD_EVENT:\n      console.log('in reducer',action);\n\n      const add_events = { ...state.events };\n      add_events[action.payload.event_id] = action.payload.event;\n\n      return { ...state,events: add_events };\n\n    case DELETE_EVENT:\n      const del_events = { ...state.events };\n      delete del_events[action.payload];\n\n      return { ...state,events: del_events };\n\n    case UPDATE_EVENT:\n      const upd_events = { ...state.events };\n      upd_events[action.payload.event_id] = action.payload.event;\n\n      return { ...state,events: upd_events };\n  \n    default:\n      return state;\n  }\n}\n\nexport default calendarReducer;\n","import { combineReducers } from 'redux';\nimport CalendarReducer from './calendar';\n\nexport default combineReducers({\n  CalendarReducer\n});","import appReducer from './reducers';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\n\nconst consoleMessages = store => next => action => {\n\n\tlet result\n\n\tconsole.groupCollapsed(`dispatching action => ${action.type}`)\n\tconsole.log('acions payload', action.payload)\n\tresult = next(action)\n\n\tlet { events } = store.getState();\n\n\tconsole.log(`\n\n\t\tevents: ${events}\n\n\t`)\n\n\tconsole.groupEnd()\n\n\treturn result\n\n}\n\nexport default (initialState={}) => {\n\treturn applyMiddleware(thunk,consoleMessages)(createStore)(appReducer, initialState)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './containers/App/';\nimport * as serviceWorker from './serviceWorker';\nimport storeFactory from './store';\n\nconst initialState = (localStorage[\"redux-store\"]) ?\n    JSON.parse(localStorage[\"redux-store\"]) :\n    {}\n\nconst saveState = () => {\n  localStorage[\"redux-store\"] = JSON.stringify(store.getState());\n}\n\nconst store = storeFactory(initialState);\nstore.subscribe(saveState);\n\nserviceWorker.unregister();\n\nwindow.React = React\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}